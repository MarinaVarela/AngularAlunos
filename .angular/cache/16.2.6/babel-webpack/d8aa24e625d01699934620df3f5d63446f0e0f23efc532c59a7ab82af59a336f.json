{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nexport let HomeComponent = class HomeComponent {\n  constructor(alunosService) {\n    this.alunosService = alunosService;\n    this.alunosFiltrados = [];\n    this.alunosLista = [];\n    this.alunosLista$ = new Observable(); // Geralmente é mais apropriado inicializar sua propriedade alunosLista$ como um Observable vazio no construtor. Isso torna seu código mais seguro e evita que você precise verificar se a propriedade é undefined toda vez que a usa.\n  }\n\n  ngOnInit() {\n    this.alunosLista$ = this.alunosService.getTodosAlunos();\n    this.alunosLista$.subscribe(alunosLista => {\n      this.alunosFiltrados = alunosLista;\n    });\n  }\n  filtrarResultado(text) {\n    this.alunosFiltrados = this.alunosLista.filter(aluno => aluno?.nome.toLowerCase().includes(text.toLowerCase()) || aluno?.idade == +text || aluno?.curso.toLowerCase().includes(text.toLowerCase()));\n  }\n};\nHomeComponent = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})], HomeComponent);","map":{"version":3,"names":["Component","Observable","HomeComponent","constructor","alunosService","alunosFiltrados","alunosLista","alunosLista$","ngOnInit","getTodosAlunos","subscribe","filtrarResultado","text","filter","aluno","nome","toLowerCase","includes","idade","curso","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\marina.varela\\Documents\\estudos\\Estudos2\\Angular\\CentroEducacao\\src\\app\\home\\home.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AlunosService } from '../alunos.service';\nimport { AlunosModel } from '../alunos';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\n\nexport class HomeComponent implements OnInit {\n  alunosFiltrados: AlunosModel[] = [];\n  alunosLista: AlunosModel[] = [];\n  alunosLista$: Observable<AlunosModel[]> = new Observable<AlunosModel[]>();  // Geralmente é mais apropriado inicializar sua propriedade alunosLista$ como um Observable vazio no construtor. Isso torna seu código mais seguro e evita que você precise verificar se a propriedade é undefined toda vez que a usa.\n\n  constructor(private alunosService: AlunosService) { }\n\n  ngOnInit(): void {\n    this.alunosLista$ = this.alunosService.getTodosAlunos();\n    this.alunosLista$.subscribe((alunosLista: AlunosModel[]) => {\n      this.alunosFiltrados = alunosLista;\n    });\n  }\n\n  filtrarResultado(text: string) {\n    this.alunosFiltrados = this.alunosLista.filter(\n      aluno =>\n        aluno?.nome.toLowerCase().includes(text.toLowerCase()) ||\n        aluno?.idade == +text ||\n        aluno?.curso.toLowerCase().includes(text.toLowerCase())\n    );\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAGjD,SAASC,UAAU,QAAQ,MAAM;AAQ1B,WAAMC,aAAa,GAAnB,MAAMA,aAAa;EAKxBC,YAAoBC,aAA4B;IAA5B,KAAAA,aAAa,GAAbA,aAAa;IAJjC,KAAAC,eAAe,GAAkB,EAAE;IACnC,KAAAC,WAAW,GAAkB,EAAE;IAC/B,KAAAC,YAAY,GAA8B,IAAIN,UAAU,EAAiB,CAAC,CAAE;EAExB;;EAEpDO,QAAQA,CAAA;IACN,IAAI,CAACD,YAAY,GAAG,IAAI,CAACH,aAAa,CAACK,cAAc,EAAE;IACvD,IAAI,CAACF,YAAY,CAACG,SAAS,CAAEJ,WAA0B,IAAI;MACzD,IAAI,CAACD,eAAe,GAAGC,WAAW;IACpC,CAAC,CAAC;EACJ;EAEAK,gBAAgBA,CAACC,IAAY;IAC3B,IAAI,CAACP,eAAe,GAAG,IAAI,CAACC,WAAW,CAACO,MAAM,CAC5CC,KAAK,IACHA,KAAK,EAAEC,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACL,IAAI,CAACI,WAAW,EAAE,CAAC,IACtDF,KAAK,EAAEI,KAAK,IAAI,CAACN,IAAI,IACrBE,KAAK,EAAEK,KAAK,CAACH,WAAW,EAAE,CAACC,QAAQ,CAACL,IAAI,CAACI,WAAW,EAAE,CAAC,CAC1D;EACH;CAED;AAvBYd,aAAa,GAAAkB,UAAA,EANzBpB,SAAS,CAAC;EACTqB,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,C,EAEWrB,aAAa,CAuBzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}