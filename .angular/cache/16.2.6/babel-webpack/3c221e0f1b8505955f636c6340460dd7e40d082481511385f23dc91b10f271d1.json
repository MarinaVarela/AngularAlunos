{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../alunos.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"ngx-toastr\";\nexport class NovoAlunoComponent {\n  constructor(alunosService, router, formBuilder, toastr) {\n    this.alunosService = alunosService;\n    this.router = router;\n    this.formBuilder = formBuilder;\n    this.toastr = toastr;\n    this.sucesso = false;\n    this.novoAlunoRequest = {\n      id: 0,\n      nome: \"\",\n      idade: 0,\n      curso: \"\"\n    };\n    this.form = this.formBuilder.group({\n      nome: ['', Validators.required],\n      idade: ['', Validators.required],\n      curso: ['', Validators.required]\n    });\n  }\n  ngOnInit() {}\n  novoAluno() {\n    if (this.form.valid) {\n      this.alunosService.getTodosAlunos().subscribe(alunos => {\n        if (alunos && alunos.length > 0) {\n          const maiorId = Math.max(...alunos.map(aluno => aluno.id));\n          this.novoAlunoRequest.id = maiorId + 1;\n          this.alunosService.novoAluno(this.novoAlunoRequest).subscribe({\n            next: aluno => {\n              this.toastr.success('Aluno cadastrado com sucesso!', 'Sucesso');\n              this.router.navigate([\"alunos\"]);\n              this.sucesso = true; // Defina 'sucesso' como verdadeiro aqui\n            },\n\n            error: error => {\n              this.toastr.error('Falha ao cadastrar aluno. Tente novamente.', 'Erro');\n              console.error(error);\n            }\n          });\n        } else {\n          // se não houver, define o id como 1\n          this.novoAlunoRequest.id = 1;\n          this.alunosService.novoAluno(this.novoAlunoRequest).subscribe({\n            next: aluno => {\n              this.toastr.success('Aluno cadastrado com sucesso!', 'Sucesso');\n              this.router.navigate([\"alunos\"]);\n              this.sucesso = true; // Defina 'sucesso' como verdadeiro aqui\n            },\n\n            error: error => {\n              this.toastr.error('Falha ao cadastrar aluno. Tente novamente.', 'Erro');\n              console.error(error);\n            }\n          });\n        }\n      });\n    }\n  }\n  static #_ = this.ɵfac = function NovoAlunoComponent_Factory(t) {\n    return new (t || NovoAlunoComponent)(i0.ɵɵdirectiveInject(i1.AlunosService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.ToastrService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NovoAlunoComponent,\n    selectors: [[\"app-novo-aluno\"]],\n    decls: 0,\n    vars: 0,\n    template: function NovoAlunoComponent_Template(rf, ctx) {},\n    styles: [\".listing-description[_ngcontent-%COMP%] {\\n    margin: 10px 0 40px 0;\\n}\\n\\n.listing-heading[_ngcontent-%COMP%] {\\n    font-size: 48pt;\\n    font-weight: bold;\\n    margin-bottom: 15px;\\n}\\n\\n.listing-location[_ngcontent-%COMP%] {\\n    font-size: 24pt;\\n    margin-bottom: 15px;\\n}\\n\\n.listing-features[_ngcontent-%COMP%] > .section-heading[_ngcontent-%COMP%] {\\n    color: var(--secondary-color);\\n    font-size: 24pt;\\n    margin-bottom: 15px;\\n}\\n\\n\\nli[_ngcontent-%COMP%] {\\n    list-style-type: none;\\n}\\n\\n.listing-apply[_ngcontent-%COMP%]   .section-heading[_ngcontent-%COMP%] {\\n    font-size: 18pt;\\n    margin-bottom: 15px;\\n}\\n\\nlabel[_ngcontent-%COMP%], input[_ngcontent-%COMP%] {\\n    display: block;\\n}\\n\\nlabel[_ngcontent-%COMP%] {\\n    color: var(--secondary-color);\\n    font-weight: bold;\\n    text-transform: uppercase;\\n    font-size: 12pt;\\n}\\n\\ninput[_ngcontent-%COMP%] {\\n    font-size: 16pt;\\n    margin-bottom: 15px;\\n    padding: 10px;\\n    width: 400px;\\n    border-top: none;\\n    border-right: none;\\n    border-left: none;\\n    border-bottom: solid .3px;\\n}\\n.primary[_ngcontent-%COMP%]{\\n   margin-top: 10px;\\n}\\n.voltar[_ngcontent-%COMP%] {\\n    margin-left: 15px;\\n    background-color: green;\\n    border: green;\\n}\\n\\n.ng-invalid.ng-touched[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n    border-color: red;\\n}\\n\\n.error-message[_ngcontent-%COMP%] {\\n    color: red;\\n    font-size: 12px;\\n    margin-top: 5px;\\n}\\n\\n.success-message[_ngcontent-%COMP%] {\\n    color: green;\\n    font-size: 12px;\\n    margin-top: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbm92by1hbHVuby9ub3ZvLWFsdW5vLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxxQkFBcUI7QUFDekI7O0FBRUE7SUFDSSxlQUFlO0lBQ2YsaUJBQWlCO0lBQ2pCLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLGVBQWU7SUFDZixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSw2QkFBNkI7SUFDN0IsZUFBZTtJQUNmLG1CQUFtQjtBQUN2Qjs7O0FBR0E7SUFDSSxxQkFBcUI7QUFDekI7O0FBRUE7SUFDSSxlQUFlO0lBQ2YsbUJBQW1CO0FBQ3ZCOztBQUVBOztJQUVJLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSw2QkFBNkI7SUFDN0IsaUJBQWlCO0lBQ2pCLHlCQUF5QjtJQUN6QixlQUFlO0FBQ25COztBQUVBO0lBQ0ksZUFBZTtJQUNmLG1CQUFtQjtJQUNuQixhQUFhO0lBQ2IsWUFBWTtJQUNaLGdCQUFnQjtJQUNoQixrQkFBa0I7SUFDbEIsaUJBQWlCO0lBQ2pCLHlCQUF5QjtBQUM3QjtBQUNBO0dBQ0csZ0JBQWdCO0FBQ25CO0FBQ0E7SUFDSSxpQkFBaUI7SUFDakIsdUJBQXVCO0lBQ3ZCLGFBQWE7QUFDakI7O0FBRUE7SUFDSSxpQkFBaUI7QUFDckI7O0FBRUE7SUFDSSxVQUFVO0lBQ1YsZUFBZTtJQUNmLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxZQUFZO0lBQ1osZUFBZTtJQUNmLGVBQWU7QUFDbkIiLCJzb3VyY2VzQ29udGVudCI6WyIubGlzdGluZy1kZXNjcmlwdGlvbiB7XHJcbiAgICBtYXJnaW46IDEwcHggMCA0MHB4IDA7XHJcbn1cclxuXHJcbi5saXN0aW5nLWhlYWRpbmcge1xyXG4gICAgZm9udC1zaXplOiA0OHB0O1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG59XHJcblxyXG4ubGlzdGluZy1sb2NhdGlvbiB7XHJcbiAgICBmb250LXNpemU6IDI0cHQ7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG59XHJcblxyXG4ubGlzdGluZy1mZWF0dXJlcz4uc2VjdGlvbi1oZWFkaW5nIHtcclxuICAgIGNvbG9yOiB2YXIoLS1zZWNvbmRhcnktY29sb3IpO1xyXG4gICAgZm9udC1zaXplOiAyNHB0O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTVweDtcclxufVxyXG5cclxuXHJcbmxpIHtcclxuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcclxufVxyXG5cclxuLmxpc3RpbmctYXBwbHkgLnNlY3Rpb24taGVhZGluZyB7XHJcbiAgICBmb250LXNpemU6IDE4cHQ7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG59XHJcblxyXG5sYWJlbCxcclxuaW5wdXQge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbn1cclxuXHJcbmxhYmVsIHtcclxuICAgIGNvbG9yOiB2YXIoLS1zZWNvbmRhcnktY29sb3IpO1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgZm9udC1zaXplOiAxMnB0O1xyXG59XHJcblxyXG5pbnB1dCB7XHJcbiAgICBmb250LXNpemU6IDE2cHQ7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG4gICAgcGFkZGluZzogMTBweDtcclxuICAgIHdpZHRoOiA0MDBweDtcclxuICAgIGJvcmRlci10b3A6IG5vbmU7XHJcbiAgICBib3JkZXItcmlnaHQ6IG5vbmU7XHJcbiAgICBib3JkZXItbGVmdDogbm9uZTtcclxuICAgIGJvcmRlci1ib3R0b206IHNvbGlkIC4zcHg7XHJcbn1cclxuLnByaW1hcnl7XHJcbiAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbn1cclxuLnZvbHRhciB7XHJcbiAgICBtYXJnaW4tbGVmdDogMTVweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGdyZWVuO1xyXG4gICAgYm9yZGVyOiBncmVlbjtcclxufVxyXG5cclxuLm5nLWludmFsaWQubmctdG91Y2hlZCBpbnB1dCB7XHJcbiAgICBib3JkZXItY29sb3I6IHJlZDtcclxufVxyXG5cclxuLmVycm9yLW1lc3NhZ2Uge1xyXG4gICAgY29sb3I6IHJlZDtcclxuICAgIGZvbnQtc2l6ZTogMTJweDtcclxuICAgIG1hcmdpbi10b3A6IDVweDtcclxufVxyXG5cclxuLnN1Y2Nlc3MtbWVzc2FnZSB7XHJcbiAgICBjb2xvcjogZ3JlZW47XHJcbiAgICBmb250LXNpemU6IDEycHg7XHJcbiAgICBtYXJnaW4tdG9wOiA1cHg7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["Validators","NovoAlunoComponent","constructor","alunosService","router","formBuilder","toastr","sucesso","novoAlunoRequest","id","nome","idade","curso","form","group","required","ngOnInit","novoAluno","valid","getTodosAlunos","subscribe","alunos","length","maiorId","Math","max","map","aluno","next","success","navigate","error","console","_","i0","ɵɵdirectiveInject","i1","AlunosService","i2","Router","i3","FormBuilder","i4","ToastrService","_2","selectors","decls","vars","template","NovoAlunoComponent_Template","rf","ctx","styles"],"sources":["C:\\Users\\marina.varela\\Documents\\estudos\\Estudos2\\Angular\\CentroEducacao\\src\\app\\novo-aluno\\novo-aluno.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\n\n\nimport { AlunosService } from '../alunos.service';\nimport { AlunosModel } from '../alunos';\n\n@Component({\n  selector: 'app-novo-aluno',\n  templateUrl: './novo-aluno.component.html',\n  styleUrls: ['./novo-aluno.component.css']\n})\nexport class NovoAlunoComponent implements OnInit {\n  form: FormGroup;\n  sucesso: boolean = false;\n\n\n  novoAlunoRequest: AlunosModel = {\n    id: 0,\n    nome: \"\",\n    idade: 0,\n    curso: \"\",\n  }\n\n  constructor(private alunosService: AlunosService, private router: Router, private formBuilder: FormBuilder, private toastr: ToastrService) {\n    this.form = this.formBuilder.group({\n      nome: ['', Validators.required],\n      idade: ['', Validators.required],\n      curso: ['', Validators.required],\n    })\n  }\n\n  ngOnInit(): void { }\n\n  novoAluno() {\n    if (this.form.valid) {\n      this.alunosService.getTodosAlunos().subscribe((alunos) => {\n        if (alunos && alunos.length > 0) {\n          const maiorId = Math.max(...alunos.map(aluno => aluno.id));\n          this.novoAlunoRequest.id = maiorId + 1;\n          this.alunosService.novoAluno(this.novoAlunoRequest).subscribe({\n            next: (aluno) => {\n              this.toastr.success('Aluno cadastrado com sucesso!', 'Sucesso');\n              this.router.navigate([\"alunos\"]);\n              this.sucesso = true; // Defina 'sucesso' como verdadeiro aqui\n            },\n            error: (error) => {\n              this.toastr.error('Falha ao cadastrar aluno. Tente novamente.', 'Erro');\n              console.error(error);\n            }\n          });\n        } else {    // se não houver, define o id como 1\n  \n          this.novoAlunoRequest.id = 1;\n          this.alunosService.novoAluno(this.novoAlunoRequest).subscribe({\n            next: (aluno) => {\n              this.toastr.success('Aluno cadastrado com sucesso!', 'Sucesso');\n              this.router.navigate([\"alunos\"]);\n              this.sucesso = true; // Defina 'sucesso' como verdadeiro aqui\n            },\n            error: (error) => {\n              this.toastr.error('Falha ao cadastrar aluno. Tente novamente.', 'Erro');\n              console.error(error);\n            }\n          });\n        }\n      });\n    }\n  }\n\n}\n\n\n\n\n\n\n\n\n\n// import { Component, OnInit } from '@angular/core';\n// import { Router } from '@angular/router';\n// import { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n// import { AlunosService } from '../alunos.service';\n// import { AlunosModel } from '../alunos';\n\n// @Component({\n//   selector: 'app-novo-aluno',\n//   templateUrl: './novo-aluno.component.html',\n//   styleUrls: ['./novo-aluno.component.css']\n// })\n// export class NovoAlunoComponent implements OnInit {\n//   form: FormGroup;\n\n//   novoAlunoRequest: AlunosModel = {\n//     id: 0, \n//     nome: \"\",\n//     idade: 0,\n//     curso: \"\",\n//   }\n\n//   constructor(private alunosService: AlunosService, private router: Router, private formBuilder: FormBuilder) {\n//     this.form = this.formBuilder.group({\n//       nome: ['', Validators.required],\n//       idade: ['', [Validators.required, Validators.min(0)]],\n//       curso: ['', Validators.required],\n//     })\n//    }\n\n//   ngOnInit(): void { }\n\n//   novoAluno() {\n//     this.alunosService.getTodosAlunos().subscribe((alunos) => {\n//       if (alunos && alunos.length > 0) {\n//         const maiorId = Math.max(...alunos.map(aluno => aluno.id));\n//         this.novoAlunoRequest.id = maiorId + 1;\n//         this.alunosService.novoAluno(this.novoAlunoRequest).\n//           subscribe({\n//             next: (aluno) => {\n//               this.router.navigate([\"alunos\"]);\n//             }\n//           });\n//       } else {    // Se não houver, define o id como 1\n\n//         this.novoAlunoRequest.id = 1;\n//         this.alunosService.novoAluno(this.novoAlunoRequest).\n//           subscribe({\n//             next: (aluno) => {\n//               this.router.navigate([\"alunos\"]);\n//             }\n//           });\n//       }\n//     });\n//   }\n// }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}