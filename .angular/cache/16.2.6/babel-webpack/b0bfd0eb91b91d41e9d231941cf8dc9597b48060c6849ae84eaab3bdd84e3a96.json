{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let NovoAlunoComponent = class NovoAlunoComponent {\n  constructor(fb, alunosService, router) {\n    this.fb = fb;\n    this.alunosService = alunosService;\n    this.router = router;\n    this.novoAlunoRequest = {\n      id: 0,\n      nome: \"\",\n      idade: 0,\n      curso: \"\"\n    };\n    this.novoAlunoForm = this.fb.group({\n      nome: ['', [Validators.required, Validators.pattern(/^[a-zA-Z\\s]*$/)]],\n      idade: ['', [Validators.required, Validators.pattern(/^[1-9][0-9]*$/)]],\n      curso: ['', Validators.required]\n    });\n  }\n  novoAluno() {\n    if (this.novoAlunoForm.valid) {\n      this.alunosService.getTodosAlunos().subscribe(alunos => {\n        const novoAlunoId = alunos && alunos.length > 0 ? Math.max(...alunos.map(aluno => aluno.id)) + 1 : 1;\n        this.novoAlunoRequest.id = novoAlunoId;\n        this.alunosService.novoAluno(this.novoAlunoRequest).subscribe({\n          next: aluno => {\n            window.alert(\"Aluno cadastrado com sucesso!\");\n            this.router.navigate([\"alunos\"]);\n          },\n          error: error => {\n            console.error(\"Erro ao cadastrar aluno:\", error);\n          }\n        });\n      });\n    }\n  }\n};\nNovoAlunoComponent = __decorate([Component({\n  selector: 'app-novo-aluno',\n  templateUrl: './novo-aluno.component.html',\n  styleUrls: ['./novo-aluno.component.css']\n})], NovoAlunoComponent);\n// import { Component, OnInit } from '@angular/core';\n// import { Router } from '@angular/router';\n// import { AlunosService } from '../alunos.service';\n// import { AlunosModel } from '../alunos';\n// @Component({\n//   selector: 'app-novo-aluno',\n//   templateUrl: './novo-aluno.component.html',\n//   styleUrls: ['./novo-aluno.component.css']\n// })\n// export class NovoAlunoComponent implements OnInit {\n//   novoAlunoRequest: AlunosModel = { id: 0, nome: \"\", idade: 0, curso: \"\" }\n//   constructor(private alunosService: AlunosService, private router: Router) { }\n//   ngOnInit(): void { }\n//   novoAluno() {\n//     this.alunosService.getTodosAlunos().subscribe((alunos) => {\n//       const novoAlunoId = alunos && alunos.length > 0 ? Math.max(...alunos.map(aluno => aluno.id)) + 1 : 1;\n//       this.novoAlunoRequest.id = novoAlunoId;\n//       this.alunosService.novoAluno(this.novoAlunoRequest).\n//         subscribe({\n//           next: (aluno) => {\n//             this.router.navigate([\"alunos\"]);\n//           }\n//         });\n//     });\n//   }\n// }\n// import { Component, OnInit } from '@angular/core';\n// import { Router } from '@angular/router';\n// import { FormBuilder, FormGroup, Validators } from '@angular/forms';\n// import { AlunosService } from '../alunos.service';\n// import { AlunosModel } from '../alunos';\n// @Component({\n//   selector: 'app-novo-aluno',\n//   templateUrl: './novo-aluno.component.html',\n//   styleUrls: ['./novo-aluno.component.css']\n// })\n// export class NovoAlunoComponent implements OnInit {\n//   form: FormGroup;\n//   novoAlunoRequest: AlunosModel = {\n//     id: 0, \n//     nome: \"\",\n//     idade: 0,\n//     curso: \"\",\n//   }\n//   constructor(private alunosService: AlunosService, private router: Router, private formBuilder: FormBuilder) {\n//     this.form = this.formBuilder.group({\n//       nome: ['', Validators.required],\n//       idade: ['', [Validators.required, Validators.min(0)]],\n//       curso: ['', Validators.required],\n//     })\n//    }\n//   ngOnInit(): void { }\n//   novoAluno() {\n//     this.alunosService.getTodosAlunos().subscribe((alunos) => {\n//       if (alunos && alunos.length > 0) {\n//         const maiorId = Math.max(...alunos.map(aluno => aluno.id));\n//         this.novoAlunoRequest.id = maiorId + 1;\n//         this.alunosService.novoAluno(this.novoAlunoRequest).\n//           subscribe({\n//             next: (aluno) => {\n//               this.router.navigate([\"alunos\"]);\n//             }\n//           });\n//       } else {    // Se não houver, define o id como 1\n//         this.novoAlunoRequest.id = 1;\n//         this.alunosService.novoAluno(this.novoAlunoRequest).\n//           subscribe({\n//             next: (aluno) => {\n//               this.router.navigate([\"alunos\"]);\n//             }\n//           });\n//       }\n//     });\n//   }\n// }","map":{"version":3,"names":["Component","Validators","NovoAlunoComponent","constructor","fb","alunosService","router","novoAlunoRequest","id","nome","idade","curso","novoAlunoForm","group","required","pattern","novoAluno","valid","getTodosAlunos","subscribe","alunos","novoAlunoId","length","Math","max","map","aluno","next","window","alert","navigate","error","console","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\marina.varela\\Documents\\estudos\\Estudos2\\Angular\\CentroEducacao\\src\\app\\novo-aluno\\novo-aluno.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AlunosService } from '../alunos.service';\nimport { AlunosModel } from '../alunos';\n\n@Component({\n  selector: 'app-novo-aluno',\n  templateUrl: './novo-aluno.component.html',\n  styleUrls: ['./novo-aluno.component.css']\n})\nexport class NovoAlunoComponent {\n  novoAlunoForm: FormGroup;\n  novoAlunoRequest: AlunosModel = { id: 0, nome: \"\", idade: 0, curso: \"\" };\n\n  constructor(\n    private fb: FormBuilder,\n    private alunosService: AlunosService,\n    private router: Router\n  ) {\n    this.novoAlunoForm = this.fb.group({\n      nome: ['', [Validators.required, Validators.pattern(/^[a-zA-Z\\s]*$/)]],\n      idade: ['', [Validators.required, Validators.pattern(/^[1-9][0-9]*$/)]],\n      curso: ['', Validators.required]\n    });\n  }\n\n  novoAluno() {\n    if (this.novoAlunoForm.valid) {\n      this.alunosService.getTodosAlunos().\n        subscribe((alunos) => {\n          const novoAlunoId = alunos && alunos.length > 0 ? Math.max(...alunos.map((aluno) => aluno.id)) + 1 : 1;\n\n          this.novoAlunoRequest.id = novoAlunoId;\n\n          this.alunosService.novoAluno(this.novoAlunoRequest).\n            subscribe({\n              next: (aluno) => {\n                window.alert(\"Aluno cadastrado com sucesso!\");\n                this.router.navigate([\"alunos\"]);\n              },\n              error: (error) => {\n                console.error(\"Erro ao cadastrar aluno:\", error);\n              }\n            });\n        });\n    }\n  }\n}\n\n\n\n\n// import { Component, OnInit } from '@angular/core';\n// import { Router } from '@angular/router';\n\n// import { AlunosService } from '../alunos.service';\n// import { AlunosModel } from '../alunos';\n\n// @Component({\n//   selector: 'app-novo-aluno',\n//   templateUrl: './novo-aluno.component.html',\n//   styleUrls: ['./novo-aluno.component.css']\n// })\n// export class NovoAlunoComponent implements OnInit {\n\n//   novoAlunoRequest: AlunosModel = { id: 0, nome: \"\", idade: 0, curso: \"\" }\n\n//   constructor(private alunosService: AlunosService, private router: Router) { }\n\n//   ngOnInit(): void { }\n\n//   novoAluno() {\n//     this.alunosService.getTodosAlunos().subscribe((alunos) => {\n//       const novoAlunoId = alunos && alunos.length > 0 ? Math.max(...alunos.map(aluno => aluno.id)) + 1 : 1;\n\n//       this.novoAlunoRequest.id = novoAlunoId;\n\n//       this.alunosService.novoAluno(this.novoAlunoRequest).\n//         subscribe({\n//           next: (aluno) => {\n//             this.router.navigate([\"alunos\"]);\n//           }\n//         });\n//     });\n//   }\n\n// }\n\n\n\n\n\n// import { Component, OnInit } from '@angular/core';\n// import { Router } from '@angular/router';\n// import { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n// import { AlunosService } from '../alunos.service';\n// import { AlunosModel } from '../alunos';\n\n// @Component({\n//   selector: 'app-novo-aluno',\n//   templateUrl: './novo-aluno.component.html',\n//   styleUrls: ['./novo-aluno.component.css']\n// })\n// export class NovoAlunoComponent implements OnInit {\n//   form: FormGroup;\n\n//   novoAlunoRequest: AlunosModel = {\n//     id: 0, \n//     nome: \"\",\n//     idade: 0,\n//     curso: \"\",\n//   }\n\n//   constructor(private alunosService: AlunosService, private router: Router, private formBuilder: FormBuilder) {\n//     this.form = this.formBuilder.group({\n//       nome: ['', Validators.required],\n//       idade: ['', [Validators.required, Validators.min(0)]],\n//       curso: ['', Validators.required],\n//     })\n//    }\n\n//   ngOnInit(): void { }\n\n//   novoAluno() {\n//     this.alunosService.getTodosAlunos().subscribe((alunos) => {\n//       if (alunos && alunos.length > 0) {\n//         const maiorId = Math.max(...alunos.map(aluno => aluno.id));\n//         this.novoAlunoRequest.id = maiorId + 1;\n//         this.alunosService.novoAluno(this.novoAlunoRequest).\n//           subscribe({\n//             next: (aluno) => {\n//               this.router.navigate([\"alunos\"]);\n//             }\n//           });\n//       } else {    // Se não houver, define o id como 1\n\n//         this.novoAlunoRequest.id = 1;\n//         this.alunosService.novoAluno(this.novoAlunoRequest).\n//           subscribe({\n//             next: (aluno) => {\n//               this.router.navigate([\"alunos\"]);\n//             }\n//           });\n//       }\n//     });\n//   }\n// }"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAiCC,UAAU,QAAQ,gBAAgB;AAU5D,WAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAI7BC,YACUC,EAAe,EACfC,aAA4B,EAC5BC,MAAc;IAFd,KAAAF,EAAE,GAAFA,EAAE;IACF,KAAAC,aAAa,GAAbA,aAAa;IACb,KAAAC,MAAM,GAANA,MAAM;IALhB,KAAAC,gBAAgB,GAAgB;MAAEC,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,EAAE;MAAEC,KAAK,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAE,CAAE;IAOtE,IAAI,CAACC,aAAa,GAAG,IAAI,CAACR,EAAE,CAACS,KAAK,CAAC;MACjCJ,IAAI,EAAE,CAAC,EAAE,EAAE,CAACR,UAAU,CAACa,QAAQ,EAAEb,UAAU,CAACc,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC;MACtEL,KAAK,EAAE,CAAC,EAAE,EAAE,CAACT,UAAU,CAACa,QAAQ,EAAEb,UAAU,CAACc,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC;MACvEJ,KAAK,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACa,QAAQ;KAChC,CAAC;EACJ;EAEAE,SAASA,CAAA;IACP,IAAI,IAAI,CAACJ,aAAa,CAACK,KAAK,EAAE;MAC5B,IAAI,CAACZ,aAAa,CAACa,cAAc,EAAE,CACjCC,SAAS,CAAEC,MAAM,IAAI;QACnB,MAAMC,WAAW,GAAGD,MAAM,IAAIA,MAAM,CAACE,MAAM,GAAG,CAAC,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGJ,MAAM,CAACK,GAAG,CAAEC,KAAK,IAAKA,KAAK,CAAClB,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;QAEtG,IAAI,CAACD,gBAAgB,CAACC,EAAE,GAAGa,WAAW;QAEtC,IAAI,CAAChB,aAAa,CAACW,SAAS,CAAC,IAAI,CAACT,gBAAgB,CAAC,CACjDY,SAAS,CAAC;UACRQ,IAAI,EAAGD,KAAK,IAAI;YACdE,MAAM,CAACC,KAAK,CAAC,+BAA+B,CAAC;YAC7C,IAAI,CAACvB,MAAM,CAACwB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;UAClC,CAAC;UACDC,KAAK,EAAGA,KAAK,IAAI;YACfC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;UAClD;SACD,CAAC;MACN,CAAC,CAAC;;EAER;CACD;AArCY7B,kBAAkB,GAAA+B,UAAA,EAL9BjC,SAAS,CAAC;EACTkC,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE,6BAA6B;EAC1CC,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,C,EACWlC,kBAAkB,CAqC9B;AAKD;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}